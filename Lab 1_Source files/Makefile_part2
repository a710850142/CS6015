
# Define the compiler and the compiler flags
CXX = g++
CFLAGS = -c
LFLAGS = -o

# Automatically list all source (.cpp) and header (.h) files in the current directory
CXXSOURCE = $(wildcard *.cpp)
HEADERS = $(wildcard *.h)

# Define object files
OBJECTS = $(CXXSOURCE:.cpp=.o)

# Define the executable file name
EXECUTABLE = program

# Default rule for building the executable
build: $(EXECUTABLE)

# Rule for creating the executable
$(EXECUTABLE): $(OBJECTS)
	$(CXX) $(LFLAGS) $(EXECUTABLE) $(OBJECTS)

# Generalized rule for creating object files
%.o: %.cpp $(HEADERS)
	$(CXX) $(CFLAGS) $< -o $@

# Rule for printing macro values
printM:
	echo "Compiler: $(CXX)"
	echo "Compiler Flags: $(CFLAGS)"
	echo "Linker Flags: $(LFLAGS)"
	echo "Source Files: $(CXXSOURCE)"
	echo "Header Files: $(HEADERS)"
	echo "Object Files: $(OBJECTS)"
	echo "Executable: $(EXECUTABLE)"

# Rule for cleaning up generated files
clean:
	rm -f $(OBJECTS) $(EXECUTABLE)

# Rule for running the executable
run: $(EXECUTABLE)
	./$(EXECUTABLE)
